==16747== Memcheck, a memory error detector
==16747== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==16747== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==16747== Command: /rhome/l/lbuturovic1/workspace/TP/T8/Z3/.runme
==16747== Parent PID: 16730
==16747== 
==16747== Conditional jump or move depends on uninitialised value(s)
==16747==    at 0x1091CB: main (main.cpp:29)
==16747== 
==16747== Conditional jump or move depends on uninitialised value(s)
==16747==    at 0x4C3084C: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==16747==    by 0x1091DC: main (main.cpp:29)
==16747== 
==16747== Conditional jump or move depends on uninitialised value(s)
==16747==    at 0x1091F1: main (main.cpp:29)
==16747== 
==16747== Conditional jump or move depends on uninitialised value(s)
==16747==    at 0x1092EB: UnesiUcenike(Ucenik**, int) (main.cpp:47)
==16747==    by 0x109218: main (main.cpp:31)
==16747== 
==16747== Conditional jump or move depends on uninitialised value(s)
==16747==    at 0x109585: ObradiUcenike(Ucenik**, int) (main.cpp:80)
==16747==    by 0x109229: main (main.cpp:36)
==16747== 
==16747== Conditional jump or move depends on uninitialised value(s)
==16747==    at 0x109983: void std::__sort<Ucenik**, __gnu_cxx::__ops::_Iter_comp_iter<ObradiUcenike(Ucenik**, int)::{lambda(Ucenik const*, Ucenik const*)#1}> >(Ucenik**, __gnu_cxx::__ops::_Iter_comp_iter<ObradiUcenike(Ucenik**, int)::{lambda(Ucenik const*, Ucenik const*)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<ObradiUcenike(Ucenik**, int)::{lambda(Ucenik const*, Ucenik const*)#1}>) (stl_algo.h:1966)
==16747==    by 0x1098F9: void std::sort<Ucenik**, ObradiUcenike(Ucenik**, int)::{lambda(Ucenik const*, Ucenik const*)#1}>(Ucenik**, ObradiUcenike(Ucenik**, int)::{lambda(Ucenik const*, Ucenik const*)#1}, ObradiUcenike(Ucenik**, int)::{lambda(Ucenik const*, Ucenik const*)#1}) (stl_algo.h:4868)
==16747==    by 0x1095D3: ObradiUcenike(Ucenik**, int) (main.cpp:82)
==16747==    by 0x109229: main (main.cpp:36)
==16747== 
==16747== 
==16747== Process terminating with default action of signal 1 (SIGHUP)
==16747==    at 0x56EF152: write (write.c:27)
==16747==    by 0x566A1BC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1203)
==16747==    by 0x566BF50: new_do_write (fileops.c:457)
==16747==    by 0x566BF50: _IO_do_write@@GLIBC_2.2.5 (fileops.c:433)
==16747==    by 0x566C402: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:798)
==16747==    by 0x5151999: std::ostream::put(char) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==16747==    by 0x5151B9E: std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==16747==    by 0x1096BB: IspisiIzvjestaj(Ucenik**, int) (main.cpp:102)
==16747==    by 0x10923A: main (main.cpp:37)
==16747== 
==16747== HEAP SUMMARY:
==16747==     in use at exit: 0 bytes in 1 blocks
==16747==   total heap usage: 3 allocs, 2 frees, 73,728 bytes allocated
==16747== 
==16747== LEAK SUMMARY:
==16747==    definitely lost: 0 bytes in 0 blocks
==16747==    indirectly lost: 0 bytes in 0 blocks
==16747==      possibly lost: 0 bytes in 0 blocks
==16747==    still reachable: 0 bytes in 1 blocks
==16747==         suppressed: 0 bytes in 0 blocks
==16747== Reachable blocks (those to which a pointer was found) are not shown.
==16747== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==16747== 
==16747== For counts of detected and suppressed errors, rerun with: -v
==16747== Use --track-origins=yes to see where uninitialised values come from
==16747== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 0 from 0)
